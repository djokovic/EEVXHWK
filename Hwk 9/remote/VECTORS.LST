8086/87/88/186 MACRO ASSEMBLER    VECTORS                                                  00:30:07  12/12/;3  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE VECTORS
OBJECT MODULE PLACED IN VECTORS.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE VECTORS.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1             NAME    vectors
                             2 +1  $INCLUDE(vectors.inc); Include files
                      =1     3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1     4     ;                                                                               ;
                      =1     5     ;                                  Vector.INC                                   ;
                      =1     6     ;                              IVector Constants                            ;
                      =1     7     ;                                 Include File                              ;
                      =1     8     ;                                                                           ;
                      =1     9     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    10     
                      =1    11     ; This file contains the definitions for timers and their interupts
                      =1    12     ;
                      =1    13     ; Revision History:
                      =1    14     ;    11/23/2013                 Created - Anjian Wu
                      =1    15     ;    12/10/2013         Added Timer 2 info - Anjian Wu
                      =1    16     
                      =1    17                                             ; IVector Definitions
                      =1    18     
                      =1    19     ; Interrupt Vectors and their control values
  0008                =1    20     Tmr0Vec         EQU     8               ;interrupt vector for Timer 0
  0012                =1    21     Tmr1Vec         EQU     18              ;interrupt vector for Timer 1
  0013                =1    22     Tmr2Vec         EQU     19              ;interrupt vector for Timer 2
                      =1    23     
  FF32                =1    24     INTCtrlrCtrl    EQU     0FF32H          ;address of interrupt controller for timer
  FF22                =1    25     INTCtrlrEOI     EQU     0FF22H          ;address of interrupt controller EOI register
                      =1    26     
  0001                =1    27     INTCtrlrCVal    EQU     00001H          ;set priority for timers to 1 and enable
                      =1    28                                             ;000000000000----  reserved
                      =1    29                                             ;------------0---  enable timer interrupt
                      =1    30                                             ;-------------001  timer priority
                            31 +1  $INCLUDE(general.inc)
                      =1    32     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    33     ;                                                                               ;
                      =1    34     ;                                  General.INC                                  ;
                      =1    35     ;                               General Constants                           ;
                      =1    36     ;                                 Include File                              ;
                      =1    37     ;                                                                           ;
                      =1    38     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    39     
                      =1    40     ; This file contains general operations
                      =1    41     ;
                      =1    42     ; Revision History:
                      =1    43     ;    11/02/2013                 Created - Anjian Wu
                      =1    44     ;    11/23/2013                 Added WORD_LOOKUP_ADJUST - Anjian Wu
                      =1    45     ;    12/05/2014         Added FMS_ERROR key, ZERO, changed other keys to 
                      =1    46     ;                       ASCII based - Anjian
                      =1    47     
                      =1    48     
                      =1    49     ; General Constants
                      =1    50     
8086/87/88/186 MACRO ASSEMBLER    VECTORS                                                  00:30:07  12/12/;3  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0000                =1    51     ASCII_NULL      EQU     0           ;
  0001                =1    52     bit_size        EQU     1           ;
  0004                =1    53     nibble_size     EQU     4           ;
  0008                =1    54     BYTE_size       EQU     8           ;
  0010                =1    55     WORD_size       EQU     16          ;
  0000                =1    56     ArrayEmpty      EQU     0               ; Empty is set at 0 index
                      =1    57     
  0001                =1    58     TRUE            EQU     1           ;
  0000                =1    59     FALSE           EQU     0           ;
                      =1    60     
  0000                =1    61     RESET           EQU     0           ; General Value for Resetting something
                      =1    62     
  0000                =1    63     CLEAR           EQU     0           ;
                      =1    64     
  0000                =1    65     ZERO            EQU     0           ;
                      =1    66     
  000A                =1    67     DIGIT           EQU     10          ; A digit in base 10 
                      =1    68     
  0001                =1    69     WORD_LOOKUP_ADJUST  EQU    1           ; Two bytes in one word -> SHL by 1
                      =1    70     
                      =1    71     ; General Definitions for Main Loops
                      =1    72     
  0001                =1    73     FIRST_RESERVED_VEC      EQU     1           ;reserve vectors 1-3
  0003                =1    74     LAST_RESERVED_VEC       EQU     3       ;
  0100                =1    75     NUM_IRQ_VECTORS     EQU 256     ;number of interrupt vectors
                      =1    76     
                      =1    77     ; MainLoop Key Codes
                      =1    78     
  0000                =1    79     KEY_EVENT_KEY       EQU     0   ; Event code indicating key pressed
  0001                =1    80     SER_ERR_KEY         EQU     1   ; Event code indicating serial error
  0002                =1    81     RX_ENQUEUED_KEY     EQU     2   ; Event code indicating new rx value gotten
  0003                =1    82     MODEM_KEY           EQU     3   ; Event code indicating modem event
  0004                =1    83     FSM_ERROR           EQU     4   ; Error key showing FSM error
                      =1    84     
                      =1    85     ; General Addresses
                      =1    86     
  FF22                =1    87     INTCtrlReg          EQU     0FF22H  ;EOI interrupt controller       
                            88 +1  $INCLUDE(timer.inc)
                      =1    89     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    90     ;                                                                               ;
                      =1    91     ;                                  Timer.INC                                    ;
                      =1    92     ;                              Timer Constants                              ;
                      =1    93     ;                                 Include File                              ;
                      =1    94     ;                                                                           ;
                      =1    95     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    96     
                      =1    97     ; This file contains the definitions for timers and their interupts
                      =1    98     ;
                      =1    99     ; Revision History:
                      =1   100     ;    11/23/2013                 Created - Anjian Wu
                      =1   101     ;    12/10/2013         Added Timer2 vals - Anjian Wu
                      =1   102     
                      =1   103     
                      =1   104                                             ; Timer Definitions
                      =1   105     
8086/87/88/186 MACRO ASSEMBLER    VECTORS                                                  00:30:07  12/12/;3  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1   106     ; Addresses
  FF56                =1   107     Tmr0Ctrl        EQU     0FF56H          ;address of Timer 0 Control Register
  FF52                =1   108     Tmr0MaxCntA     EQU     0FF52H          ;address of Timer 0 Max Count A Register
  FF50                =1   109     Tmr0Count       EQU     0FF50H          ;address of Timer 0 Count Register
                      =1   110     
  FF5E                =1   111     Tmr1Ctrl        EQU     0FF5EH          ;address of Timer 1 Control Register
  FF5A                =1   112     Tmr1MaxCntA     EQU     0FF5AH          ;address of Timer 1 Max Count A Register
  FF58                =1   113     Tmr1Count       EQU     0FF58H          ;address of Timer 1 Count Register
                      =1   114     
                      =1   115     
  FF66                =1   116     Tmr2Ctrl        EQU     0FF66H          ;address of Timer 2 Control Register
  FF62                =1   117     Tmr2MaxCnt      EQU     0FF62H          ;address of Timer 2 Max Count A Register
  FF60                =1   118     Tmr2Count       EQU     0FF60H          ;address of Timer 2 Count Register
                      =1   119     
                      =1   120     ; Control Register Values
  E001                =1   121     Tmr0CtrlVal     EQU     0E001H          ;value to write to Timer 0 Control Register
                      =1   122                                             ;1---------------  enable timer
                      =1   123                                             ;-1--------------  write to control
                      =1   124                                             ;--1-------------  enable interrupts
                      =1   125                                             ;----000000------  reserved
                      =1   126                                             ;---0------0-----  read only
                      =1   127                                             ;-----------0----  Retrigger
                      =1   128                                             ;------------0---  Prescaler
                      =1   129                                             ;-------------0--  external clock
                      =1   130                                             ;--------------0-  single counter mode
                      =1   131                                             ;---------------1  continuous mode
                      =1   132                                             
  E001                =1   133     Tmr1CtrlVal     EQU     0E001H          ;value to write to Timer 1 Control Register
                      =1   134                                             ;1---------------  enable timer
                      =1   135                                             ;-1--------------  write to control
                      =1   136                                             ;--1-------------  enable interrupts
                      =1   137                                             ;----000000------  reserved
                      =1   138                                             ;---0------0-----  read only
                      =1   139                                             ;-----------0----  Retrigger
                      =1   140                                             ;------------0---  Prescaler
                      =1   141                                             ;-------------0--  external clock
                      =1   142                                             ;--------------0-  single counter mode
                      =1   143                                             ;---------------1  continuous mode
                      =1   144     
  E001                =1   145     Tmr2CtrlVal     EQU     0E001H          ;value to write to Timer 2 Control Register
                      =1   146                                             ;1---------------  enable timer
                      =1   147                                             ;-1--------------  write to control
                      =1   148                                             ;--1-------------  enable interrupts
                      =1   149                                             ;----0000000-----  reserved
                      =1   150                                             ;-----------0----  MaxCount
                      =1   151                                             ;------------000-  reserved
                      =1   152                                             ;---------------1  continuous mode
                      =1   153     ; Control Register Values
                      =1   154                                           
                      =1   155                                             ; Control Register Values
  08CA                =1   156     CTS_PER_MILSEC  EQU     2250            ; 18MHZ/(8 * 1KHz) ~ 2250 counts per MS
                      =1   157     
  07D0                =1   158     PRESCALE_2SEC   EQU     2000            ; 2 seconds = CTS_PER_MILSEC * 2000
                      =1   159     
  0008                =1   160     TimerEOI        EQU     00008H          ;Timer EOI command (same for all timers)
8086/87/88/186 MACRO ASSEMBLER    VECTORS                                                  00:30:07  12/12/;3  PAGE    4


LOC  OBJ                  LINE     SOURCE

  8000                =1   161     NonSpecEOI      EQU     08000H          ;Non-specific EOI command
                      =1   162     
                      =1   163     
  0258                =1   164     COUNT_FOR_30HZ  EQU     600             ; 18,000,000 HZ/(8 * 30 Hz * PWM_WIDTH_MAX) 
                      =1   165                                             ; ~ 600 counts for 30 HZ of PWM
                      =1   166                                             
  00B1                =1   167     COUNT_FOR_100HZ EQU     177             ; 18,000,000 HZ/(8 * 100 Hz * PWM_WIDTH_MAX) 
                      =1   168                                             ; ~ 177 counts for 100 HZ of PWM             
                                                             
                      =1   169                                             
                      =1   170                                             ; NOTE THIS IS APPROXIMATE, Clock is actually
                                    a bit faster
                      =1   171                                             ; than 18 MHZ
                      =1   172     
                      =1   173     
                           174     
                           175     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                           176     ;                                                                            ;
                           177     ;                                 vectors.asm                                ;
                           178     ;                                EE/CS  51                                   ;
                           179     ;                                 Anjian Wu                                  ;
                           180     ;                               TA: Pipe-mazo                                ;
                           181     ;                                                                            ;
                           182     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                           183     ;                                 What's in here?
                           184     ;
                           185     ;   ClrIRQVectors   -   This functions installs the IllegalEventHandler for all
                           186     ;                       interrupt vectors in the interrupt vector table.
                           187     ;
                           188     ;
                           189     ;   IllegalEventHandler -   This procedure is the event handler for illegal
                           190     ;                           (uninitialized) interrupts.  It does nothing
                           191     ;
                           192     ;                               Created -> 11-22-2013 - Anjian Wu
                           193     ;                   ADjusted for REMOTE -> 12/10/2013 - Anjian Wu
                           194     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                           195     
                           196     ; ClrIRQVectors
                           197     ;
                           198     ; Description:      This functions installs the IllegalEventHandler for all
                           199     ;                   interrupt vectors in the interrupt vector table.  Note
                           200     ;                   that all 256 vectors are initialized so the code must be
                           201     ;                   located above 400H.  The initialization skips  (does not
                           202     ;                   initialize vectors) from vectors FIRST_RESERVED_VEC to
                           203     ;                   LAST_RESERVED_VEC. This is taken from Glenn's exmaples
                           204     ;
                           205     ; Arguments:        None.
                           206     ; Return Value:     None.
                           207     ;
                           208     ; Local Variables:  CX    - vector counter.
                           209     ;                   ES:SI - pointer to vector table.
                           210     ; Shared Variables: None.
                           211     ; Global Variables: None.
                           212     ;
                           213     ; Input:            None.
8086/87/88/186 MACRO ASSEMBLER    VECTORS                                                  00:30:07  12/12/;3  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           214     ; Output:           None.
                           215     ;
                           216     ; Error Handling:   None.
                           217     ;
                           218     ; Algorithms:       None.
                           219     ; Data Structures:  None.
                           220     ;
                           221     ; Registers Used:   flags, AX, CX, SI, ES
                           222     ; Stack Depth:      None.
                           223     ;
                           224     ; Last Modified:    Working -> 11-22-2013 - Anjian Wu
                           225     
                           226     CGROUP  GROUP   CODE
                           227     
----                       228     CODE    SEGMENT PUBLIC 'CODE'
                           229     
                           230     
                           231             ASSUME  CS:CGROUP
                           232             
0000                       233     ClrIRQVectors   PROC    NEAR
                           234                     PUBLIC  ClrIRQVectors
                           235     
0000                       236     InitClrVectorLoop:              ;setup to store the same handler 256 times
                           237     
0000 33C0                  238             XOR     AX, AX          ;clear ES (interrupt vectors are in segment 0)
0002 8EC0                  239             MOV     ES, AX
0004 BE0000                240             MOV     SI, 0           ;initialize SI to top of Vector table
                           241     
0007 B90001                242             MOV     CX, 256         ;up to 256 vectors to initialize
                           243     
                           244     
000A                       245     ClrVectorLoop:                  ;loop clearing each vector
                           246                                     ;check if should store the vector
000A 83FE04                247             CMP     SI, 4 * FIRST_RESERVED_VEC
000D 7205                  248             JB          DoStore                  ;if before start of reserved field - sto
                                   re it
000F 83FE0C                249             CMP         SI, 4 * LAST_RESERVED_VEC
0012 760B                  250             JBE         DoneStore        ;if in the reserved vectors - don't store it
                           251             ;JA     DoStore                  ;otherwise past them - so do the store
                           252     
0014                       253     DoStore:                        ;store the vector
0014 26C7042500     R      254             MOV     ES: WORD PTR [SI], OFFSET(IllegalEventHandler)
0019 26C74402----   R      255             MOV     ES: WORD PTR [SI + 2], SEG(IllegalEventHandler)
                           256     
001F                       257     DoneStore:                                  ;done storing the vector
001F 83C604                258             ADD     SI, 4           ;update pointer to next vector
                           259                                     ; We increment by 4 since each vector is comprised
                           260                                     ; of a CS:IP (WORD:WORD). Thus each unit is normalize
                                   d
                           261                                     ; to four bytes and we need to jump 4 positions per v
                                   ector.
                           262     
0022 E2E6                  263             LOOP    ClrVectorLoop   ;loop until have cleared all vectors
                           264             ;JMP    EndClrIRQVectors;and all done
                           265     
8086/87/88/186 MACRO ASSEMBLER    VECTORS                                                  00:30:07  12/12/;3  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           266     
0024                       267     EndClrIRQVectors:               ;all done, return
0024 C3                    268             RET
                           269     
                           270     
                           271     ClrIRQVectors   ENDP
                           272     
                           273     
                           274     ; IllegalEventHandler
                           275     ;
                           276     ; Description:       This procedure is the event handler for illegal
                           277     ;                    (uninitialized) interrupts.  It does nothing - it just
                           278     ;                    returns after sending a non-specific EOI.
                           279     ;
                           280     ; Operation:         Send a non-specific EOI and return.
                           281     ;
                           282     ; Arguments:         None.
                           283     ; Return Value:      None.
                           284     ;
                           285     ; Local Variables:   None.
                           286     ; Shared Variables:  None.
                           287     ; Global Variables:  None.
                           288     ;
                           289     ; Input:             None.
                           290     ; Output:            None.
                           291     ;
                           292     ; Error Handling:    None.
                           293     ;
                           294     ; Algorithms:        None.
                           295     ; Data Structures:   None.
                           296     ;
                           297     ; Registers Changed: None
                           298     ; Stack Depth:       2 words
                           299     ;
                           300     ; Last Modified:     Moved here - 11-23-2013 - Anjian Wu
                           301     
                           302     
0025                       303     IllegalEventHandler     PROC    NEAR
                           304     
0025 90                    305             NOP                             ;do nothing (can set breakpoint here)
                           306     
0026 50                    307             PUSH    AX                      ;save the registers
0027 52                    308             PUSH    DX
                           309     
0028 BA22FF                310             MOV     DX, INTCtrlrEOI         ;send a non-specific EOI to the
002B B80080                311             MOV     AX, NonSpecEOI          ;   interrupt controller to clear out
002E EE                    312             OUT     DX, AL                  ;   the interrupt that got us here
                           313     
002F 5A                    314             POP     DX                      ;restore the registers
0030 58                    315             POP     AX
                           316     
0031 CF                    317             IRET                            ;and return
                           318     
                           319     
                           320     IllegalEventHandler     ENDP
8086/87/88/186 MACRO ASSEMBLER    VECTORS                                                  00:30:07  12/12/;3  PAGE    7


LOC  OBJ                  LINE     SOURCE

                           321     
----                       322     CODE    ENDS
                           323     
                           324     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
