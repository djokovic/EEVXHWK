8086/87/88/186 MACRO ASSEMBLER    HW3_MAIN                                                 00:46:19  11/02/;3  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE HW3_MAIN
OBJECT MODULE PLACED IN HW3_MAIN.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE HW3_MAIN.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1     
                             2             NAME    hw3_main
                             3     
                             4     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             5     ;                                                                            ;
                             6     ;                                   hw3_main                                 ;
                             7     ;                            Homework #3 Main Loop                           ;
                             8     ;                                  EE/CS  51                                 ;
                             9     ;                               Anjian Wu                                    ;
                            10     ;                               TA: Pipe-mazo                                ;
                            11     ;                                                                            ;
                            12     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            13     
                            14     
                            15     ; Description:      This program tests the conversion functions for Homework
                            16     ;                   #3.  It calls Glenn's mystery functions with two passed
                            17     ;                   values, the queue struc address and max_queue length.
                            18     ;                   All test handling and breakpoints is inside QueueTest.
                            19     ;                   Note the max length allowed is 511, since there is always
                            20     ;                   a empty ele spot in queue.
                            21     ;
                            22     ; Input:            None.
                            23     ; Output:           None.
                            24     ;
                            25     ; User Interface:   No real user interface.  The user can set breakpoints at
                            26     ;                   QueueGood and QueueError to see if the code is working
                            27     ;                   or not.
                            28     ; Error Handling:   If a test fails the program jumps to QueueError.
                            29     ;
                            30     ; Algorithms:       None.
                            31     ; Data Structures:  None.
                            32     ;
                            33     ; Known Bugs:       None.
                            34     ; Limitations:      The max queue length is limited by Max_Length
                            35     ;
                            36     ; Revision History:
                            37     ;    10/31/2013     Initial version -   Anjian Wu
                            38     ;    11/01/2013     Debugged and working - Anjian Wu
                            39     ;    11/02/2013     Fixed bug where queue could go beyond
                            40     ;                   allocated length - Anjian Wu
                            41     
                            42     
                            43 +1  $INCLUDE(general.inc);
                      =1    44     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    45     ;                                                                               ;
                      =1    46     ;                                  General.INC                                  ;
                      =1    47     ;                               General Constants                           ;
                      =1    48     ;                                 Include File                              ;
                      =1    49     ;                                                                           ;
                      =1    50     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
8086/87/88/186 MACRO ASSEMBLER    HW3_MAIN                                                 00:46:19  11/02/;3  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    51     
                      =1    52     ; This file contains the definitions for the queue functions
                      =1    53     ;
                      =1    54     ; Revision History:
                      =1    55     ;    11/02/2013                 Created - Anjian Wu
                      =1    56     
                      =1    57     
                      =1    58     ; Queue Constants
                      =1    59     
  0200                =1    60     MAX_Q_LENG          EQU     512          ;Maxlength allowed for byte or word queue
                      =1    61     
                            62 +1  $INCLUDE(queue.inc);
                      =1    63     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    64     ;                                                                               ;
                      =1    65     ;                                  Queues.INC                                   ;
                      =1    66     ;                           Queue Conversion Constants                          ;
                      =1    67     ;                                 Include File                              ;
                      =1    68     ;                                                                           ;
                      =1    69     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    70     
                      =1    71     ; This file contains the definitions for the queue functions
                      =1    72     ;
                      =1    73     ; Revision History:
                      =1    74     ;    10/29/2013                 Created - Anjian Wu
                      =1    75     ;    11/01/2013   Debugged,Documented, and working - Anjian Wu
                      =1    76     ;
                      =1    77     ;Structure for Queue allocation, information, and storage
                      =1    78     
                      =1    79     
                      =1    80     ; General Definitions
                      =1    81     
  0000                =1    82     ArrayEmpty      EQU     0             ; Empty is set at 0 index
  0000                =1    83     ByteSizeQueue   EQU     0             ; 0 indicates byte queue
  0001                =1    84     ByteQ           EQU     1             ; Byte norm factor for indexing
  0002                =1    85     WordQ           EQU     2             ; Word norm factor for indexing
  0400                =1    86     ARRAY_SIZE      EQU     1024          ; Size of queue array (fits 512-1 words, 
                      =1    87                                           ;or 1023 bytes)
                      =1    88     
                      =1    89     
----                  =1    90     QUEUESTRUC      STRUC                   ;structure containing all queue info
0000                  =1    91         head            DW      ?           ;counter for debouncing the switch
0002                  =1    92         tail            DW      ?           ;time until change repeat rates
0004                  =1    93         qsize           DW      ?           ;rate at which to repeat the switch
0006                  =1    94         leng            DW      ?           ;rate at which to repeat the switch
0008                  =1    95         array               DB          ARRAY_SIZE  DUP     (?) ;pointer to the function 
                                   to get switch status
----                  =1    96     QUEUESTRUC      ENDS
                      =1    97     
                      =1    98     ;Structure for storing Queue return values or args
                      =1    99     
----                  =1   100     QUEUEVARS      STRUC                ;structure containing all queue info
0000                  =1   101         dequeued    DW      ?               ;counter for debouncing the switch
----                  =1   102     QUEUEVARS      ENDS
                      =1   103     
                      =1   104     
8086/87/88/186 MACRO ASSEMBLER    HW3_MAIN                                                 00:46:19  11/02/;3  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1   105     
                           106     
                           107     CGROUP  GROUP   CODE
                           108     DGROUP  GROUP   DATA, STACK
                           109     
                           110     
                           111     
----                       112     CODE    SEGMENT PUBLIC 'CODE'
                           113     
                           114     
                           115             ASSUME  CS:CGROUP, DS:DGROUP
                           116     
                           117     
                           118     
                           119     ;external function declarations
                           120     
                           121             EXTRN   QueueInit:NEAR          ;convert a number to a decimal string
                           122             EXTRN   QueueEmpty:NEAR         ;convert a number to a hex string
                           123             EXTRN   QueueFull:NEAR          ;convert a number to a decimal string
                           124             EXTRN   Dequeue:NEAR            ;convert a number to a hex string
                           125             EXTRN   Enqueue:NEAR            ;convert a number to a hex string
                           126             EXTRN   QueueTest:NEAR          ; Glenn's Test Code
                           127     
0000                       128     START:  
                           129     
0000                       130     MAIN:
0000 B8----         R      131             MOV     AX, DGROUP              ;initialize the stack pointer
0003 8ED0                  132             MOV     SS, AX
0005 BCE00190       R      133             MOV     SP, OFFSET(DGROUP:TopOfStack)
                           134     
0009 B8----         R      135             MOV     AX, DGROUP              ;initialize the data segment
000C 8ED8                  136             MOV     DS, AX
                           137     
                           138     
000E                       139     TestSetup:                             ;a test failed
000E 8D360000       R      140             LEA     SI, QUEUE              ; Grab address of Queue
0012 B9FF01                141             MOV     CX, MAX_Q_LENG - 1     ; Load queue's max length
0015                       142     TestGO:                                 
0015 E80000         E      143             CALL    QueueTest              ;Call Glenn's tests
                           144     
                           145             
----                       146     CODE    ENDS
                           147     
                           148     
                           149     
                           150     
                           151     ;the data segment
                           152     
----                       153     DATA    SEGMENT PUBLIC  'DATA'
                           154     
                           155     
0000 ????                  156     QUEUE          QUEUESTRUC <>           ;Holds the String
0002 ????
0004 ????
0006 ????
8086/87/88/186 MACRO ASSEMBLER    HW3_MAIN                                                 00:46:19  11/02/;3  PAGE    4


LOC  OBJ                  LINE     SOURCE

0008 (1024
     ??
     )
                           157     
                           158     
----                       159     DATA    ENDS
                           160     
                           161     
                           162     
                           163     
                           164     ;the stack
                           165     
----                       166     STACK   SEGMENT STACK  'STACK'
                           167     
0000 (80                   168                     DB      80 DUP ('Stack ')       ;240 words
     537461636B20
     )
                           169     
01E0                       170     TopOfStack      LABEL   WORD
                           171     
----                       172     STACK   ENDS
                           173     
                           174     
                           175     
                           176             END     START

ASSEMBLY COMPLETE, NO ERRORS FOUND
